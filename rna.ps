%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Thu Feb 19 17:25:16 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -noLP -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CAAGCUGACUGACUGAUGCAUGCUGACUGACUGAUGCAUGCAUGAUGCCAUG\
) def
/coor [
[107.05867004 164.07009888]
[92.09411621 163.97108459]
[77.55570221 160.42396545]
[64.22705841 153.61994934]
[52.82660675 143.92576599]
[43.96884155 131.86393738]
[38.13120270 118.08462524]
[35.62834930 103.33053589]
[36.59518433 88.39692688]
[40.97959900 74.08872986]
[48.54526138 61.17717743]
[58.88438034 50.35820770]
[71.43966675 42.21497345]
[85.53438568 37.18640518]
[100.40880585 35.54354477]
[115.26119995 37.37494278]
[120.48422241 23.31364822]
[125.70724487 9.25235462]
[130.93026733 -4.80894089]
[136.15328979 -18.87023544]
[141.37632751 -32.93153000]
[146.59934998 -46.99282455]
[151.82237244 -61.05411911]
[141.20024109 -72.01464081]
[136.39376831 -86.50120544]
[138.35728455 -101.63749695]
[146.70094299 -114.41819763]
[159.76808167 -122.30567932]
[174.96423340 -123.73388672]
[189.27218628 -118.41924286]
[199.85107422 -107.41697693]
[204.60046387 -92.91159821]
[202.57734680 -77.78315735]
[194.18342590 -65.03541565]
[181.08532715 -57.19945145]
[165.88366699 -55.83109665]
[160.66064453 -41.76980209]
[155.43762207 -27.70850563]
[150.21458435 -13.64721107]
[144.99156189 0.41408387]
[139.76853943 14.47537899]
[134.54551697 28.53667450]
[129.32249451 42.59796906]
[141.76892090 50.90663147]
[151.96397400 61.86146927]
[159.35810852 74.87200928]
[163.55281067 89.23696899]
[164.32194519 104.18206787]
[161.62406921 118.90174866]
[155.60459900 132.60260010]
[146.58799744 144.54615784]
[135.06025696 154.08862305]
] def
/pairs [
[16 43]
[17 42]
[18 41]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
